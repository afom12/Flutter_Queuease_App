import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart'; // Generated by FlutterFire CLI
import 'package:flutter_localizations/flutter_localizations.dart';
import 'package:flutter_gen/gen_l10n/app_localizations.dart';
import 'screens/auth/role_redirect_page.dart';
import 'screens/auth/login.dart';
import 'screens/auth/register.dart';
import 'screens/home/dashboard.dart';
import 'screens/queue/live_tracker.dart';
import 'screens/home/service_selection.dart';
import 'screens/queue/booking_confirmation.dart';
import 'providers/queue_status_page.dart';
import 'screens/admin/admin_panel_page.dart';
import 'screens/home/profile_page.dart';
import 'screens/home/my_history_page.dart';
import 'screens/home/edit_profile_page.dart';
import 'screens/notifications_page.dart';
import 'role_guard.dart'; // üõ†Ô∏è <- was missing a semicolon
import 'screens/auth/welcome_page.dart';
import 'screens/home/settings_page.dart';


void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  FlutterError.onError = (FlutterErrorDetails details) {
    FlutterError.presentError(details);
    debugPrint('üêõ Flutter Error: ${details.exception}');
  };

  try {
    await Firebase.initializeApp(
      options: DefaultFirebaseOptions.currentPlatform,
    );
  } catch (e) {
    debugPrint("Firebase init error: $e");
  }

  runApp(const QueueaseApp());
}

class QueueaseApp extends StatelessWidget {
  const QueueaseApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'QUEUEASE',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primaryColor: const Color(0xFF004AAD),
        scaffoldBackgroundColor: const Color(0xFFF5F8FA),
        fontFamily: 'Poppins',
        colorScheme: ColorScheme.fromSeed(
          seedColor: const Color(0xFF004AAD),
          primary: const Color(0xFF004AAD),
          secondary: const Color(0xFF00C2CB),
        ),
      ),
      localizationsDelegates: const [
        AppLocalizations.delegate,
        GlobalMaterialLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate,
        GlobalCupertinoLocalizations.delegate,
      ],
      supportedLocales: const [
        Locale('en'), // English
        Locale('am'), // Amharic
      ],
      initialRoute: '/welcome',
      routes: {
        '/welcome': (context) => const WelcomePage(),
        '/login': (context) => const LoginPage(),
        '/redirect': (context) => const RoleRedirectPage(),
        '/register': (context) => const RegisterPage(),
        '/dashboard': (context) => const DashboardPage(),
        '/settings': (context) => const SettingsPage(),
        '/service-selection': (context) => const ServiceSelectionPage(),
        '/booking-confirmation': (context) => const BookingConfirmationPage(),
        '/live-tracker': (context) => const LiveQueueTracker(),
        '/queue-status': (context) => const QueueStatusPage(),
        '/admin-panel': (context) => const AdminPanelPage(),
        '/history': (context) => const MyHistoryPage(),
        '/profile': (context) => const ProfilePage(
              userName: "Actual User Name", // Replace dynamically in production
              userEmail: "user@email.com",
              userPhone: "+251 912 345 678",
            ),
        '/edit-profile': (context) => const EditProfilePage(),
        '/notifications': (context) => const NotificationsPage(),
        '/admin': (context) => const RoleGuard(
          requiredRole: 'admin',
          child: AdminPanelPage(),
        ),


      },
    );
  }
}
